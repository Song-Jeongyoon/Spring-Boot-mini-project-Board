<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.board.mapper.BoardMapper">	<!-- xml파일을 사용할 mapper가 있는 경로 -->
  
	<!-- 게시물 목록 -->
	<!-- <select> 태그를 이용하여 select 쿼리임을 나타냄. 앞서 mapper에서 말했던 메소드의 이름은 select 쿼리의 id값과 같아야함. -->
	<select id="boardList" resultType="com.example.board.BoardDTO">	

			SELECT
				idx AS pIdx, title, writer, regdate
			FROM
				board_table 
 
			ORDER BY idx DESC  


	</select>  
  
  	<!-- 게시물 목록 + 검색 -->
	<select id="boardListSearch" parameterType="String" resultType="com.example.board.BoardDTO">	

			SELECT
				idx AS pIdx, title, writer, regdate
			FROM
				board_table 						
			<if test='searchType.equals("title")'>
 			 WHERE title LIKE <![CDATA[ concat('%', #{keyword}, '%')]]>
 			</if> 
 			<if test='searchType.equals("content")'>
 			 WHERE content LIKE <![CDATA[ concat('%', #{keyword}, '%')]]>
 			</if>												
 			<if test='searchType.equals("writer")'>
  				WHERE writer = #{keyword}
 			</if>
			ORDER BY idx DESC  

	</select>
	
	<!-- 게시물 상세 조회 -->
	<select id="boardDetail" parameterType="int" resultType="com.example.board.BoardDTO">
			
			SELECT
				idx AS pIdx, title, content, writer, regdate
			FROM
				board_table	
			WHERE idx = [#{pIdx}
			
	</select>
	
	<!-- 게시물 등록 -->
	<insert id="boardInsert" parameterType="com.example.board.BoardDTO">	
		
		insert INTO
		board_table (idx, title, content, writer, regdate)
		values (#{pIdx},#{title},#{content},#{writer},now())
		
	</insert>
	
	<!-- 게시물 수정 -->
	<update id="boardUpdate" parameterType="com.example.board.BoardDTO">
		UPDATE 
			board_table
		SET
			title = #{title},
			content = #{content}
		WHERE
			idx = #{pIdx}
	</update>
	
</mapper>